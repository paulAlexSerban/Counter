/*!*********************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./components/pages/counter/counter.page.scss ***!
  \*********************************************************************************************************************************************************************************************/
html {
  font-size: 50%; }
  @media only screen and (min-width: 56.25em) {
    html {
      font-size: 56.25%; } }
  @media only screen and (min-width: 63.125em) {
    html {
      font-size: 62.5%; } }
  @media only screen and (min-width: 75.0625em) {
    html {
      font-size: 75%; } }

/*** The new CSS Reset - version 1.3.1 (last updated 28.10.2021) ***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(:not(iframe, canvas, img, svg, video):not(svg *, symbol *)) {
  all: unset;
  display: revert; }

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box; }

/**
* Setup the box model on the root level
*/
html {
  box-sizing: border-box; }

/* Remove list styles (bullets/numbers) */
ol, ul {
  list-style: none; }

/* For images to not be able to exceed their container */
img {
  max-width: 100%; }

/* removes spacing between cells in tables */
table {
  border-collapse: collapse; }

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert; }

fieldset {
  padding: 0; }

/**
* 1. Correct the line height in all browsers.
* 2. Prevent adjustments of font size after orientation changes in iOS.
*/
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

::selection {
  background-color: #1f1f1f;
  color: #eeeeee; }

body {
  font-family: "Open-sans", sans-serif; }

h1 {
  font-size: 3rem;
  line-height: 3.4rem; }

h2 {
  font-size: 2.4rem;
  line-height: 2.8rem; }

p, span, a, label, output {
  font-size: 1.6rem;
  line-height: 2rem; }

button {
  font-size: 1.4rem;
  line-height: 1.8rem; }

body {
  flex-direction: column;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -o-flex-direction: column;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #eeeeee;
  padding: 0;
  overflow-x: hidden;
  position: relative;
  min-height: 100vh;
  margin: 0; }
  body > * {
    width: 100%; }

.counter__base {
  --text-color: #1f1f1f;
  --background-color: #f5f5f5;
  --border-color: #1f1f1f;
  --shadow: 0 3px 6px rgba(0, 0, 0, 16%), 0 3px 6px rgba(0, 0, 0, 23%);
  flex-direction: column;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  -o-flex-direction: column;
  display: flex;
  justify-content: center;
  align-items: normal;
  max-width: 25%;
  margin: 0 auto;
  background: var(--background-color);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  box-shadow: var(--shadow); }

.counter__title-heading {
  padding: 0.7rem 1.6rem;
  color: var(--background-color);
  grid-area: top;
  text-align: center;
  background: var(--text-color); }

.counter__container {
  flex-direction: row;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  -o-flex-direction: row;
  display: flex;
  justify-content: space-between;
  align-items: space-between;
  padding: 1.4rem 1.6rem;
  gap: 1.4rem; }

.counter__output {
  width: 45%; }

.counter__button {
  width: 45%; }

.counter__output {
  flex-direction: row;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  -o-flex-direction: row;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.8rem 1.4rem;
  font-weight: 700;
  border: 1px solid var(--text-color); }

.counter__button {
  flex-direction: row;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  -ms-flex-direction: row;
  -o-flex-direction: row;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.4rem 2.4rem;
  color: var(--background-color);
  letter-spacing: .05rem;
  cursor: pointer;
  background: var(--text-color);
  border: none; }

.counter__base {
  background-color: transparent; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/